#!/bin/bash

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

echo "üîç Validando ambiente de desenvolvimento..."

# Fun√ß√£o para verificar comando
check_command() {
    if ! command -v $1 &> /dev/null; then
        echo -e "${RED}‚ùå $1 n√£o encontrado${NC}"
        return 1
    else
        echo -e "${GREEN}‚úì $1 encontrado${NC}"
        return 0
    fi
}

# Fun√ß√£o para verificar vers√£o do Node
check_node_version() {
    required_version="16.0.0"
    current_version=$(node -v | cut -d'v' -f2)
    
    if [ "$(printf '%s\n' "$required_version" "$current_version" | sort -V | head -n1)" = "$required_version" ]; then 
        echo -e "${GREEN}‚úì Node.js vers√£o $current_version (>= $required_version)${NC}"
        return 0
    else
        echo -e "${RED}‚ùå Node.js vers√£o $current_version < $required_version${NC}"
        return 1
    fi
}

# Fun√ß√£o para verificar ambiente Gitpod
check_gitpod() {
    if [ -n "$GITPOD_WORKSPACE_ID" ]; then
        echo -e "${GREEN}‚úì Executando no Gitpod (ID: $GITPOD_WORKSPACE_ID)${NC}"
        
        # Verificar se estamos no diret√≥rio correto
        if [[ "$PWD" == *"/workspace/project-manager"* ]]; then
            echo -e "${GREEN}‚úì Diret√≥rio de trabalho correto${NC}"
        else
            echo -e "${RED}‚ùå Diret√≥rio de trabalho incorreto${NC}"
            echo -e "${YELLOW}‚ÑπÔ∏è  Voc√™ deve estar em /workspace/project-manager${NC}"
            return 1
        fi

        # Verificar se a workspace est√° ativa
        if curl -s "https://$GITPOD_WORKSPACE_ID.ws-us117.gitpod.io" > /dev/null; then
            echo -e "${GREEN}‚úì Workspace Gitpod est√° ativa${NC}"
        else
            echo -e "${RED}‚ùå Workspace Gitpod n√£o est√° ativa${NC}"
            echo -e "${YELLOW}‚ÑπÔ∏è  Mantenha a aba do Gitpod aberta no browser para manter a conex√£o SSH${NC}"
            return 1
        fi
        
        return 0
    else
        echo -e "${RED}‚ùå N√£o est√° executando no Gitpod${NC}"
        return 1
    fi
}

# Fun√ß√£o para verificar conex√£o Git
check_git_config() {
    if git config --get remote.origin.url > /dev/null; then
        echo -e "${GREEN}‚úì Reposit√≥rio Git configurado: $(git config --get remote.origin.url)${NC}"
        return 0
    else
        echo -e "${RED}‚ùå Reposit√≥rio Git n√£o configurado${NC}"
        return 1
    fi
}

# Fun√ß√£o para verificar estrutura do projeto
check_project_structure() {
    local errors=0
    
    # Verificar diret√≥rios principais
    for dir in "client" "server" "docs" "scripts"; do
        if [ -d "$dir" ]; then
            echo -e "${GREEN}‚úì Diret√≥rio $dir encontrado${NC}"
        else
            echo -e "${RED}‚ùå Diret√≥rio $dir n√£o encontrado${NC}"
            errors=$((errors + 1))
        fi
    done
    
    # Verificar arquivos essenciais
    for file in "package.json" "tsconfig.json"; do
        if [ -f "client/$file" ]; then
            echo -e "${GREEN}‚úì $file do cliente encontrado${NC}"
        else
            echo -e "${RED}‚ùå $file do cliente n√£o encontrado${NC}"
            errors=$((errors + 1))
        fi
        
        if [ -f "server/$file" ]; then
            echo -e "${GREEN}‚úì $file do servidor encontrado${NC}"
        else
            echo -e "${RED}‚ùå $file do servidor n√£o encontrado${NC}"
            errors=$((errors + 1))
        fi
    done
    
    return $errors
}

# Verificar comandos necess√°rios
echo -e "\nüìã Verificando comandos necess√°rios..."
check_command "node" || exit 1
check_command "npm" || exit 1
check_command "git" || exit 1

# Verificar vers√£o do Node
echo -e "\nüìã Verificando vers√£o do Node.js..."
check_node_version || exit 1

# Verificar ambiente Gitpod
echo -e "\nüìã Verificando ambiente Gitpod..."
check_gitpod || exit 1

# Verificar configura√ß√£o Git
echo -e "\nüìã Verificando configura√ß√£o Git..."
check_git_config || exit 1

# Verificar estrutura do projeto
echo -e "\nüìã Verificando estrutura do projeto..."
check_project_structure

# Verificar node_modules
echo -e "\nüìã Verificando node_modules..."
if [ -d "client/node_modules" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  node_modules encontrado no cliente - considere remover e usar 'npm ci'${NC}"
fi

if [ -d "server/node_modules" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  node_modules encontrado no servidor - considere remover e usar 'npm ci'${NC}"
fi

# Verificar conex√£o SSH
echo -e "\nüìã Verificando conex√£o SSH..."
if [ -n "$SSH_CONNECTION" ]; then
    echo -e "${GREEN}‚úì Conectado via SSH${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  N√£o conectado via SSH - algumas funcionalidades podem estar limitadas${NC}"
fi

echo -e "\n‚úÖ Valida√ß√£o do ambiente conclu√≠da!" 