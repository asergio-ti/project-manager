import React, { useState } from 'react';
import { ResizableBox } from 'react-resizable';
import 'react-resizable/css/styles.css';

// Tipos
interface Phase {
  id: string;
  name: string;
  status: 'pending' | 'in_progress' | 'completed';
  documents: {
    schema: string;
    completion: number;
    status: 'pending' | 'in_progress' | 'completed';
  }[];
}

interface Message {
  id: string;
  type: 'user' | 'assistant';
  content: string;
  timestamp: Date;
}

// Componente Timeline
const Timeline: React.FC<{ phases: Phase[] }> = ({ phases }) => {
  return (
    <div className="h-full bg-card rounded-lg p-4 overflow-y-auto">
      <h2 className="text-xl font-bold mb-4 text-card-foreground">Timeline do Projeto</h2>
      <div className="space-y-4">
        {phases.map((phase) => (
          <div
            key={phase.id}
            className={`p-4 rounded-lg border ${
              phase.status === 'completed'
                ? 'bg-primary/10 border-primary'
                : phase.status === 'in_progress'
                ? 'bg-accent/10 border-accent'
                : 'bg-muted border-border'
            }`}
          >
            <h3 className="font-semibold text-card-foreground mb-2">{phase.name}</h3>
            <div className="space-y-2">
              {phase.documents.map((doc, index) => (
                <div key={index} className="flex items-center justify-between">
                  <span className="text-sm text-muted-foreground">{doc.schema}</span>
                  <div className="flex items-center space-x-2">
                    <div className="w-24 h-2 bg-muted rounded-full overflow-hidden">
                      <div
                        className="h-full bg-primary rounded-full"
                        style={{ width: `${doc.completion}%` }}
                      />
                    </div>
                    <span className="text-xs text-muted-foreground">
                      {doc.completion}%
                    </span>
                  </div>
                </div>
              ))}
            </div>
          </div>
        ))}
      </div>
    </div>
  );
};

// Componente Chat
const Chat: React.FC = () => {
  const [messages, setMessages] = useState<Message[]>([
    {
      id: '1',
      type: 'assistant',
      content: 'Olá! Sou seu assistente do Project Manager. Como posso ajudar?',
      timestamp: new Date()
    }
  ]);
  const [input, setInput] = useState('');

  const handleSend = () => {
    if (!input.trim()) return;

    const newMessages = [
      ...messages,
      {
        id: Date.now().toString(),
        type: 'user',
        content: input,
        timestamp: new Date()
      },
      {
        id: (Date.now() + 1).toString(),
        type: 'assistant',
        content: 'Entendi sua solicitação. Vou analisar e processar as informações...',
        timestamp: new Date()
      }
    ];

    setMessages(newMessages);
    setInput('');
  };

  return (
    <div className="h-full flex flex-col bg-card rounded-lg overflow-hidden">
      <div className="flex-1 p-4 overflow-y-auto space-y-4">
        {messages.map((message) => (
          <div
            key={message.id}
            className={`flex ${
              message.type === 'user' ? 'justify-end' : 'justify-start'
            }`}
          >
            <div
              className={`max-w-[80%] p-3 rounded-lg ${
                message.type === 'user'
                  ? 'bg-primary text-primary-foreground'
                  : 'bg-muted text-muted-foreground'
              }`}
            >
              {message.content}
            </div>
          </div>
        ))}
      </div>
      <div className="p-4 border-t border-border">
        <div className="flex space-x-2">
          <input
            type="text"
            value={input}
            onChange={(e) => setInput(e.target.value)}
            onKeyPress={(e) => e.key === 'Enter' && handleSend()}
            placeholder="Digite sua mensagem..."
            className="flex-1 px-4 py-2 rounded-lg bg-background border border-input focus:outline-none focus:ring-2 focus:ring-primary"
          />
          <button
            onClick={handleSend}
            className="px-4 py-2 bg-primary text-primary-foreground rounded-lg hover:bg-primary/90 transition-colors"
          >
            Enviar
          </button>
        </div>
      </div>
    </div>
  );
};

// Componente Principal
const ProjectManagerInterface: React.FC = () => {
  // Dados de exemplo
  const phases: Phase[] = [
    {
      id: 'dvp',
      name: 'DVP - Documentação de Visão e Proposta',
      status: 'completed',
      documents: [
        { schema: 'Visão', completion: 100, status: 'completed' },
        { schema: 'Análise de Mercado', completion: 100, status: 'completed' },
        { schema: 'Modelo de Negócio', completion: 100, status: 'completed' }
      ]
    },
    {
      id: 'drs',
      name: 'DRS - Documento de Requisitos',
      status: 'in_progress',
      documents: [
        { schema: 'Requisitos Funcionais', completion: 60, status: 'in_progress' },
        { schema: 'Requisitos Não Funcionais', completion: 40, status: 'in_progress' },
        { schema: 'Regras de Negócio', completion: 20, status: 'in_progress' }
      ]
    },
    {
      id: 'das',
      name: 'DAS - Documento de Arquitetura',
      status: 'pending',
      documents: [
        { schema: 'Visão Arquitetural', completion: 0, status: 'pending' },
        { schema: 'Decisões Técnicas', completion: 0, status: 'pending' },
        { schema: 'Componentes', completion: 0, status: 'pending' }
      ]
    }
  ];

  return (
    <div className="h-screen bg-background p-4 flex flex-col">
      <header className="mb-4">
        <h1 className="text-2xl font-bold text-foreground">Project Manager</h1>
      </header>
      
      <div className="flex-1 flex space-x-4">
        {/* Painel Esquerdo - Timeline */}
        <div className="w-1/2 h-full">
          <Timeline phases={phases} />
        </div>

        {/* Divisor Redimensionável */}
        <ResizableBox
          width={4}
          height={Infinity}
          axis="x"
          resizeHandles={['e']}
          minConstraints={[4, Infinity]}
          maxConstraints={[4, Infinity]}
          className="bg-border hover:bg-primary/50 transition-colors cursor-col-resize"
        />

        {/* Painel Direito - Chat */}
        <div className="flex-1 h-full">
          <Chat />
        </div>
      </div>
    </div>
  );
};

export default ProjectManagerInterface; 